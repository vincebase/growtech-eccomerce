[{"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\index.js":"1","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\App.js":"2","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\store.js":"3","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\Home.js":"4","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\layout\\Header.js":"5","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\product\\ProductDetails.js":"6","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\cart\\Cart.js":"7","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\cart\\Payment.js":"8","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\cart\\Shipping.js":"9","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\cart\\ConfirmOrder.js":"10","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\cart\\OrderSuccess.js":"11","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\order\\ListOrders.js":"12","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\UpdatePassword.js":"13","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\Profile.js":"14","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\UpdateProfile.js":"15","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\NewPassword.js":"16","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\ForgotPassword.js":"17","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\Dashboard.js":"18","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\NewProduct.js":"19","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\Register.js":"20","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\order\\OrderDetails.js":"21","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\ProductsList.js":"22","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\UpdateProduct.js":"23","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\ProcessOrder.js":"24","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\OrdersList.js":"25","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\ProductReviews.js":"26","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\UsersList.js":"27","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\UpdateUser.js":"28","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\Login.js":"29","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\route\\ProtectedRoute.js":"30","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\actions\\userActions.js":"31","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\reducers\\productReducers.js":"32","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\reducers\\cartReducers.js":"33","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\reducers\\userReducers.js":"34","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\reducers\\orderReducers.js":"35","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\layout\\Loader.js":"36","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\layout\\MetaData.js":"37","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\product\\Product.js":"38","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\actions\\productActions.js":"39","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\actions\\cartActions.js":"40","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\layout\\Search.js":"41","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\Sidebar.js":"42","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\actions\\orderActions.js":"43","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\review\\ListReviews.js":"44","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\constants\\productConstants.js":"45","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\constants\\orderConstants.js":"46","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\constants\\cartConstants.js":"47","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\constants\\userConstants.js":"48","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\cart\\CheckoutSteps.js":"49","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\contact_us.js":"50","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\contactUs\\contactMap.js":"51","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\contactUs\\contactInquiry.js":"52","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\contactUs\\mapFrame.js":"53","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\layout\\TeFooter.js":"54","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\features.js":"55","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\about.js":"56","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\blogs.js":"57","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\services.js":"58"},{"size":589,"mtime":1627207026749,"results":"59","hashOfConfig":"60"},{"size":5372,"mtime":1627272457995,"results":"61","hashOfConfig":"60"},{"size":1734,"mtime":1627207026759,"results":"62","hashOfConfig":"60"},{"size":5753,"mtime":1627269106788,"results":"63","hashOfConfig":"60"},{"size":6420,"mtime":1627272019260,"results":"64","hashOfConfig":"60"},{"size":9572,"mtime":1627215988232,"results":"65","hashOfConfig":"60"},{"size":4608,"mtime":1627270380620,"results":"66","hashOfConfig":"60"},{"size":5498,"mtime":1627207026954,"results":"67","hashOfConfig":"60"},{"size":4762,"mtime":1627207026963,"results":"68","hashOfConfig":"60"},{"size":3748,"mtime":1627270351107,"results":"69","hashOfConfig":"60"},{"size":732,"mtime":1627207026945,"results":"70","hashOfConfig":"60"},{"size":2710,"mtime":1627207027026,"results":"71","hashOfConfig":"60"},{"size":2922,"mtime":1627207027144,"results":"72","hashOfConfig":"60"},{"size":2082,"mtime":1627207027125,"results":"73","hashOfConfig":"60"},{"size":5120,"mtime":1627207027153,"results":"74","hashOfConfig":"60"},{"size":2924,"mtime":1627207027115,"results":"75","hashOfConfig":"60"},{"size":2198,"mtime":1627207027097,"results":"76","hashOfConfig":"60"},{"size":5769,"mtime":1627207026823,"results":"77","hashOfConfig":"60"},{"size":8197,"mtime":1627207026833,"results":"78","hashOfConfig":"60"},{"size":5629,"mtime":1627207027134,"results":"79","hashOfConfig":"60"},{"size":3773,"mtime":1627270185137,"results":"80","hashOfConfig":"60"},{"size":3788,"mtime":1627207026869,"results":"81","hashOfConfig":"60"},{"size":9264,"mtime":1627207026887,"results":"82","hashOfConfig":"60"},{"size":6278,"mtime":1627207026851,"results":"83","hashOfConfig":"60"},{"size":3830,"mtime":1627207026842,"results":"84","hashOfConfig":"60"},{"size":5063,"mtime":1627207026860,"results":"85","hashOfConfig":"60"},{"size":3543,"mtime":1627207026905,"results":"86","hashOfConfig":"60"},{"size":4587,"mtime":1627207026896,"results":"87","hashOfConfig":"60"},{"size":3377,"mtime":1627207027107,"results":"88","hashOfConfig":"60"},{"size":920,"mtime":1627207027085,"results":"89","hashOfConfig":"60"},{"size":7420,"mtime":1627207026798,"results":"90","hashOfConfig":"60"},{"size":6961,"mtime":1627207027224,"results":"91","hashOfConfig":"60"},{"size":1107,"mtime":1627207027206,"results":"92","hashOfConfig":"60"},{"size":6373,"mtime":1627207027234,"results":"93","hashOfConfig":"60"},{"size":4375,"mtime":1627207027215,"results":"94","hashOfConfig":"60"},{"size":134,"mtime":1627207026994,"results":"95","hashOfConfig":"60"},{"size":232,"mtime":1627222224516,"results":"96","hashOfConfig":"60"},{"size":1255,"mtime":1627309516517,"results":"97","hashOfConfig":"60"},{"size":5962,"mtime":1627209137611,"results":"98","hashOfConfig":"60"},{"size":1093,"mtime":1627207026771,"results":"99","hashOfConfig":"60"},{"size":1037,"mtime":1627226579104,"results":"100","hashOfConfig":"60"},{"size":1638,"mtime":1627207026878,"results":"101","hashOfConfig":"60"},{"size":3664,"mtime":1627207026780,"results":"102","hashOfConfig":"60"},{"size":714,"mtime":1627207027072,"results":"103","hashOfConfig":"60"},{"size":1905,"mtime":1627207027184,"results":"104","hashOfConfig":"60"},{"size":1160,"mtime":1627207027175,"results":"105","hashOfConfig":"60"},{"size":146,"mtime":1627207027166,"results":"106","hashOfConfig":"60"},{"size":2213,"mtime":1627207027193,"results":"107","hashOfConfig":"60"},{"size":1844,"mtime":1627207026927,"results":"108","hashOfConfig":"60"},{"size":1102,"mtime":1627268608041,"results":"109","hashOfConfig":"60"},{"size":1252,"mtime":1627272823893,"results":"110","hashOfConfig":"60"},{"size":2233,"mtime":1627268656118,"results":"111","hashOfConfig":"60"},{"size":656,"mtime":1627272760392,"results":"112","hashOfConfig":"60"},{"size":2757,"mtime":1627268821547,"results":"113","hashOfConfig":"60"},{"size":830,"mtime":1627272139783,"results":"114","hashOfConfig":"60"},{"size":826,"mtime":1627272014156,"results":"115","hashOfConfig":"60"},{"size":823,"mtime":1627272172020,"results":"116","hashOfConfig":"60"},{"size":836,"mtime":1627272106725,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"mxbz28",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"120"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"120"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"120"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"120"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\index.js",[],["242","243"],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\App.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\store.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\Home.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\layout\\Header.js",["244","245","246","247","248","249"],"import React, { Fragment, useState } from 'react'\nimport {Link } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from '../../actions/userActions'\n\nimport '../../App.css'\n\n\nconst Header = ( fixed ) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user, loading } = useSelector(state => state.auth)\n    const { cartItems } = useSelector(state => state.cart)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Logged out successfully.')\n    }\n    const [navbarOpen, setNavbarOpen] = useState(false);\n\n    return (\n        <Fragment>\n             <nav className=\"relative flex flex-wrap items-center justify-between px-4\tnav-bg text-gray-700\">\n        <div className=\"container px-2 mx-auto flex flex-wrap items-center justify-between\">\n          <div className=\"mt-1 w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\n            <a\n              className=\"text-sm hidden md:block font-bold leading-relaxed inline-block mr-4 whitespace-nowrap uppercase\"\n              href=\"#pablo\"\n            >\n            <Link to=\"/\">\n                            <img src=\"/images/GrowTechFarms.svg\" alt=\"logo\" width=\"120\"/>\n                        </Link>\n            </a>\n            <a\n              className=\"text-sm font-bold leading-relaxed inline-block mr-4 whitespace-nowrap uppercase md:hidden\"\n              href=\"#pablo\"\n            >\n                 <Link to=\"/\">\n                 <img src=\"/images/Growtech_logo_only.svg\"\n                    alt=\"logo-pic\"\n                    width=\"50\"\n                    height=\"50\"\n                    />\n                     </Link>\n            </a>\n\n\n            <button\n              className=\"login-button cursor-pointer text-xl leading-none px-2 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n\n              type=\"button\"\n              onClick={() => setNavbarOpen(!navbarOpen)}\n            >\n              <svg className=\"h-8 w-8 text-gray-800\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 10h16M4 14h16M4 18h16\" />\n              </svg>\n\n            </button>\n\n          </div>\n          <div\n            className={\n              \"lg:flex flex-grow items-center px-5 mt-3\" +\n              (navbarOpen ? \" flex\" : \" hidden\")\n            }\n            id=\"example-navbar-danger\"\n          >\n            <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto text-center\">\n\n              <li className=\"cursor-pointer nav-item px-3 flex items-center text-xs uppercase font-bold leading-snug  hover:opacity-75\">\n              <Link to=\"/\">\n              <a className=\"ml-2\">Our Products</a>\n              </Link>\n              </li>\n              <li className=\"cursor-pointer nav-item px-3 flex items-center text-xs uppercase font-bold leading-snug  hover:opacity-75\">\n              <Link to=\"/about_us\">\n                <a className=\"ml-2\">About</a>\n              </Link>\n              </li>  \n              <li className=\"cursor-pointer nav-item px-3 flex items-center text-xs uppercase font-bold leading-snug  hover:opacity-75\">\n              <Link to=\"/services\">\n                <a className=\"ml-2\">Services</a>\n              </Link>\n              </li>  \n              <li className=\"cursor-pointer nav-item px-3 flex items-center text-xs uppercase font-bold leading-snug  hover:opacity-75\">\n              <Link  to=\"/features\">\n                <a className=\"ml-2\">Features</a>\n              </Link>\n              </li>  \n              <li className=\"cursor-pointer nav-item px-3 flex items-center text-xs uppercase font-bold leading-snug  hover:opacity-75\">\n              <Link to=\"/contact\">\n                <a className=\"ml-2\">Contact us</a>\n              </Link>\n              </li>  \n              <li className=\"cursor-pointer nav-item px-3 flex items-center text-xs uppercase font-bold leading-snug  hover:opacity-75\">\n              <Link to=\"/blogs\">\n                <a className=\"ml-2\">Blogs</a>\n              </Link>\n              </li>  \n            </ul>\n\n          </div>\n          <div className=\"md:col-3 mt-2 md:mt-0 text-center\">\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\n                        <span id=\"cart\" className=\"ml-3 text-dark\">Cart</span>\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\n                    </Link>\n\n                    {user ? (\n                        <div className=\"ml-4 dropdown d-inline\">\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                                <figure className=\"avatar avatar-nav\">\n                                    <img\n                                        src={user.avatar && user.avatar.url}\n                                        alt={user && user.name}\n                                        className=\"rounded-circle\"\n                                    />\n                                </figure>\n                                <span className=\"text-dark\">{user && user.name}</span>\n                            </Link>\n\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n\n                                {user && user.role === 'admin' && (\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\n                                )}\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                    Logout\n                                </Link>\n\n                            </div>\n\n\n                        </div>\n\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\n\n                </div>\n\n                </div>\n            </nav>\n        </Fragment>\n    )\n}\n\nexport default Header\n","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\product\\ProductDetails.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\cart\\Cart.js",["250"],"import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\n\nconst Cart = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const { cartItems } = useSelector(state => state.cart)\n\n    const removeCartItemHandler = (id) => {\n        dispatch(removeItemFromCart(id))\n    }\n\n    const increaseQty = (id, quantity, stock) => {\n        const newQty = quantity + 1;\n\n        if (newQty > stock) return;\n\n        dispatch(addItemToCart(id, newQty))\n    }\n\n    const decreaseQty = (id, quantity) => {\n\n        const newQty = quantity - 1;\n\n        if (newQty <= 0) return;\n\n        dispatch(addItemToCart(id, newQty))\n\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Your Cart'} />\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\n                <Fragment>\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\n\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8\">\n\n                            {cartItems.map(item => (\n                                <Fragment>\n                                    <hr />\n\n                                    <div className=\"cart-item\" key={item.product}>\n                                        <div className=\"row\">\n                                            <div className=\"col-4 col-lg-3\">\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\n                                            </div>\n\n                                            <div className=\"col-5 col-lg-3\">\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                            </div>\n\n\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                <p id=\"card_item_price\">Php{item.price}</p>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                <div className=\"stockCounter d-inline\">\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\n\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\n\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <hr />\n                                </Fragment>\n                            ))}\n\n                        </div>\n\n                        <div className=\"col-12 col-lg-3 my-4\">\n                            <div id=\"order_summary\">\n                                <h4>Order Summary</h4>\n                                <hr />\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\n                                <p>Est. total: <span className=\"order-summary-values\">Php{cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\n\n                                <hr />\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\n                            </div>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Cart\n","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\cart\\Payment.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\cart\\Shipping.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\cart\\ConfirmOrder.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\cart\\OrderSuccess.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\order\\ListOrders.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\UpdatePassword.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\Profile.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\UpdateProfile.js",["251"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\n\nconst UpdateProfile = ({ history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData))\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept='image/*'\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\NewPassword.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\ForgotPassword.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\Dashboard.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\NewProduct.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\Register.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\order\\OrderDetails.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\ProductsList.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\UpdateProduct.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\ProcessOrder.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\OrdersList.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\ProductReviews.js",["252"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\n\nconst ProductReviews = () => {\n\n    const [productId, setProductId] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, reviews } = useSelector(state => state.productReviews);\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (productId !== '') {\n            dispatch(getProductReviews(productId))\n        }\n\n        if (isDeleted) {\n            alert.success('Review deleted successfully');\n            dispatch({ type: DELETE_REVIEW_RESET })\n        }\n\n\n\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReview(id, productId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(getProductReviews(productId))\n    }\n\n    const setReviews = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Review ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Rating',\n                    field: 'rating',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Comment',\n                    field: 'comment',\n                    sort: 'asc'\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        reviews.forEach(review => {\n            data.rows.push({\n                id: review._id,\n                rating: review.rating,\n                comment: review.comment,\n                user: review.name,\n\n                actions:\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Product Reviews'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"row justify-content-center mt-5\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"productId_field\"\n                                            className=\"form-control\"\n                                            value={productId}\n                                            onChange={(e) => setProductId(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button\n                                        id=\"search_button\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block py-2\"\n                                    >\n                                        SEARCH\n\t\t\t\t\t\t\t\t    </button>\n                                </ form>\n                            </div>\n\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <MDBDataTable\n                                data={setReviews()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        ) : (\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\n                            )}\n\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductReviews\n","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\UsersList.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\UpdateUser.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\user\\Login.js",["253"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, clearErrors } from '../../actions/userActions'\n\nconst Login = ({ history, location }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push(redirect)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Login'} />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Login</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    LOGIN\n                                </button>\n\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n                            </form>\n                        </div>\n                    </div>\n\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\route\\ProtectedRoute.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\actions\\userActions.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\reducers\\productReducers.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\reducers\\userReducers.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\layout\\Loader.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\product\\Product.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\actions\\productActions.js",["254"],"import axios from 'axios';\n\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/productConstants'\n\nexport const getProducts = (keyword = '', currentPage = 1,  price, category, rating = 0) => async (dispatch) => {\n    try {\n  \n          dispatch({ type: ALL_PRODUCTS_REQUEST })\n  \n          let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n  \n          if(category) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n          }\n  \n  \n          const { data } = await axios.get(link)\n  \n          dispatch({ \n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n          })\n  \n  \n    } catch (error) {\n      dispatch({\n        type: ALL_PRODUCTS_FAIL,\n        payload: error.response.data.message\n      })\n    }\n  \n  }\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/product/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\actions\\cartActions.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\layout\\Search.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\admin\\Sidebar.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\actions\\orderActions.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\review\\ListReviews.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\constants\\productConstants.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\constants\\orderConstants.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\constants\\cartConstants.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\constants\\userConstants.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\cart\\CheckoutSteps.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\contact_us.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\contactUs\\contactMap.js",["255"],"import MyMap from './mapFrame'\r\n\r\n\r\nconst ContactMap = () => {\r\n  return (\r\n  \r\n        <div className=\"col-12 col-md-7 bg-gray-300 rounded-lg overflow-hidden sm:mr-10 p-10 flex items-end justify-start relative\">\r\n                    <MyMap/>\r\n                    <div className=\"bg-white relative flex flex-wrap py-6 rounded shadow-md\">\r\n                        <div className=\"lg:w-1/2 px-6\">\r\n                        <h2 className=\"title-font font-semibold text-gray-900 tracking-widest text-xs\">ADDRESS</h2>\r\n                        <p className=\"mt-1\">L-5 Belfast, Novaliches, Quezon City, 1118 Metro Manila</p>\r\n                        </div>\r\n                        <div className=\"lg:w-1/2 px-6 mt-4 lg:mt-0\">\r\n                        <h2 className=\"title-font font-semibold text-gray-900 tracking-widest text-xs\">EMAIL</h2>\r\n                        <a className=\"text-green-500 leading-relaxed\">example@email.com</a>\r\n                        <h2 className=\"title-font font-semibold text-gray-900 tracking-widest text-xs mt-4\">PHONE</h2>\r\n                        <p className=\"leading-relaxed\">123-456-7890</p>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default ContactMap\r\n","C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\contactUs\\contactInquiry.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\contactUs\\mapFrame.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\layout\\TeFooter.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\features.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\about.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\blogs.js",[],"C:\\Users\\Gelo-PC\\Desktop\\react-tailwindcss-boilerplate-main\\src\\components\\services.js",[],{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":75,"column":15,"nodeType":"262","endLine":75,"endColumn":35},{"ruleId":"260","severity":1,"message":"261","line":80,"column":17,"nodeType":"262","endLine":80,"endColumn":37},{"ruleId":"260","severity":1,"message":"261","line":85,"column":17,"nodeType":"262","endLine":85,"endColumn":37},{"ruleId":"260","severity":1,"message":"261","line":90,"column":17,"nodeType":"262","endLine":90,"endColumn":37},{"ruleId":"260","severity":1,"message":"261","line":95,"column":17,"nodeType":"262","endLine":95,"endColumn":37},{"ruleId":"260","severity":1,"message":"261","line":100,"column":17,"nodeType":"262","endLine":100,"endColumn":37},{"ruleId":"263","severity":1,"message":"264","line":6,"column":10,"nodeType":"265","messageId":"266","endLine":6,"endColumn":18},{"ruleId":"267","severity":1,"message":"268","line":47,"column":8,"nodeType":"269","endLine":47,"endColumn":52,"suggestions":"270"},{"ruleId":"263","severity":1,"message":"271","line":5,"column":8,"nodeType":"265","messageId":"266","endLine":5,"endColumn":14},{"ruleId":"267","severity":1,"message":"272","line":34,"column":8,"nodeType":"269","endLine":34,"endColumn":58,"suggestions":"273"},{"ruleId":"263","severity":1,"message":"274","line":30,"column":5,"nodeType":"265","messageId":"266","endLine":30,"endColumn":24},{"ruleId":"260","severity":1,"message":"261","line":16,"column":25,"nodeType":"262","endLine":16,"endColumn":71},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useAlert' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["277"],"'Loader' is defined but never used.","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["278"],"'DELETE_REVIEW_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"283","text":"284"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"285","text":"286"},[1319,1363],"[dispatch, alert, error, history, isUpdated, user]",[914,964],"[dispatch, alert, isAuthenticated, error, history, redirect]"]